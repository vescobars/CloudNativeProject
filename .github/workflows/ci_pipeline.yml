name: Test coverage
on:
  push:
    branches:
      - main
      - develop
jobs:
  test_calculator:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.10 ]
    steps:
      - uses: actions/checkout@v1
      - name: Install pipenv
        working-directory: ./calculator
        run: pip install pipenv
      - name: Install dependencies
        working-directory: ./calculator
        run: pipenv install --dev
      - name: Run unit tests
        working-directory: ./calculator
        run: pipenv run pytest --cov=src -v -s --cov-fail-under=70


  test_users:
    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        python-version: [ 3.9 ]
    steps:
      - uses: actions/checkout@v1
      - name: Install dependencies
        working-directory: ./users
        run: pip install -r requirements.txt
      - name: Create database
        run: |
          createdb
          PGPASSWORD=password createdb -h localhost -p 5432 -U postgres db_tests"

      - name: Run unit tests
        working-directory: ./users
        env:
          DB_USER: postgres
          DB_PASSWORD: password
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: db
        run: pytest --cov=src -v -s --cov-fail-under=70
