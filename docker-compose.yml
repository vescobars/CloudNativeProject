version: '3'
networks:
    app_net:
      driver: bridge
    user_net:
      driver: bridge
    route_net:
      driver: bridge
    post_net:
      driver: bridge
    offer_net:
      driver: bridge
    utility_net:
      driver: bridge
services:
  users:
    build: ./users
    ports:
      - "3000:3000"
    environment:
      DB_NAME: monitor_users
      DB_HOST: users_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      FLASK_APP: ./src/main.py
    depends_on:
      users_db:
        condition: service_healthy
    networks:
      - app_net
      - user_net
  users_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - user_net
  routes:
    build: ./routes
    ports:
      - "3002:3000"
    environment:
      DB_NAME: monitor_routes
      DB_HOST: routes_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      USERS_PATH: "http://users:3000"
      FLASK_APP: ./src/main.py
    depends_on:
      routes_db:
        condition: service_healthy
    networks:
      - app_net
      - route_net
  routes_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_routes
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - route_net
  posts:
    build: ./posts
    ports:
      - "3001:3000"
    environment:
      DB_NAME: monitor_posts
      DB_HOST: posts_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      USERS_PATH: "http://users:3000"
      FLASK_APP: ./src/main.py
    depends_on:
      posts_db:
        condition: service_healthy
    networks:
      - app_net
      - post_net
  posts_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_posts
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - post_net
  offers:
    build: ./offers
    ports:
      - "3003:3000"
    environment:
      DB_NAME: monitor_offers
      DB_HOST: offers_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      USERS_PATH: "http://users:3000"
      FLASK_APP: ./src/main.py
    depends_on:
      offers_db:
        condition: service_healthy
    networks:
      - app_net
      - offer_net
  offers_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_offers
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - offer_net
  utilities:
    build: ./utility
    ports:
      - "3011:8000"
    environment:
      DB_NAME: monitor_utilities
      DB_HOST: utilities_db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      USERS_PATH: "http://users:3000"
    depends_on:
      utilities_db:
        condition: service_healthy
    networks:
      - app_net
      - utility_net
  utilities_db:
    image: postgres
    environment:
      POSTGRES_DB: monitor_utilities
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 2s
      timeout: 5s
      retries: 5
    networks:
      - utility_net