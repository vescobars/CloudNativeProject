""" Utils for users """
import datetime
import hashlib
from secrets import token_urlsafe
from typing import Tuple

from src.database import SessionLocal
from src.models import User
from src.schemas import UserSchema
from src.users.schemas import CreateUserRequestSchema


class Users:
    def __init__(self):
        self.Session = SessionLocal

    def create_user(self, data: CreateUserRequestSchema):
        """
        Insert a new user into the Users table
        """
        with SessionLocal() as session:
            current_time = datetime.datetime.now()

            new_user = User(
                username=data.username,
                email=data.email,
                phoneNumber=data.phoneNumber,
                dni=data.dni,
                fullName=data.fullName,

                passwordHash
            salt
            token
            status
            expireAt
            createdAt
            updateAt
            )

            session.add(new_user)
            session.commit()


def generate_salt() -> str:
    """
    Generates a random 32 byte hash and returns it as a string encoded in url-safe Base64
    Returns:

    """
    return token_urlsafe(32)


def create_salted_hash(data, salt=generate_salt()) -> Tuple[str, str]:
    """
    Generates a salted hash of 'data' and returns both the hash and salt.
    Salt is automatically generated if it is not provided
    Args:
        data: The text for which a salted hash will be created
        salt: The salt used for the hash. Auto-generated by default

    Returns:
        str: the hash
        str: the salt used for the hashing
    """

    concatenation = data + salt
    data_hash = hashlib.sha256(concatenation, usedforsecurity=True)
    return data_hash.hexdigest(), salt
